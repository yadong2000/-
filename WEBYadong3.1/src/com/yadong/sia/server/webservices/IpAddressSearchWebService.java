package com.yadong.sia.server.webservices;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * <a href="http://www.webxml.com.cn/" target="_blank">WebXml.com.cn</a> <strong>IP地址搜索 WEB 服务</strong>包含中国和国外已知的IP地址数据，是目前最完整的IP地址数据，记录数量现已超过37万条并还在不断更新和增加中，因IP地址在不断变化，此IP地址数据查询仅供参考。</br>此IP地址搜索Web Services请不要用于任何商业目的，若有需要请<a href="http://www.webxml.com.cn/zh_cn/contact_us.aspx" target="_blank">联系我们</a>，欢迎技术交流。 QQ：8409035<br /><strong>使用本站 WEB 服务请注明或链接本站：http://www.webxml.com.cn/ 感谢大家的支持</strong>！<br /><br />&nbsp;
 *
 * This class was generated by Apache CXF 3.0.4
 * 2015-05-03T08:12:57.086+08:00
 * Generated source version: 3.0.4
 * 
 */
@WebServiceClient(name = "IpAddressSearchWebService", 
                  wsdlLocation = "http://webservice.webxml.com.cn/WebServices/IpAddressSearchWebService.asmx?wsdl",
                  targetNamespace = "http://WebXml.com.cn/") 
public class IpAddressSearchWebService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://WebXml.com.cn/", "IpAddressSearchWebService");
    public final static QName IpAddressSearchWebServiceSoap = new QName("http://WebXml.com.cn/", "IpAddressSearchWebServiceSoap");
    public final static QName IpAddressSearchWebServiceSoap12 = new QName("http://WebXml.com.cn/", "IpAddressSearchWebServiceSoap12");
    public final static QName IpAddressSearchWebServiceHttpGet = new QName("http://WebXml.com.cn/", "IpAddressSearchWebServiceHttpGet");
    public final static QName IpAddressSearchWebServiceHttpPost = new QName("http://WebXml.com.cn/", "IpAddressSearchWebServiceHttpPost");
    static {
        URL url = null;
        try {
            url = new URL("http://webservice.webxml.com.cn/WebServices/IpAddressSearchWebService.asmx?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(IpAddressSearchWebService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://webservice.webxml.com.cn/WebServices/IpAddressSearchWebService.asmx?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public IpAddressSearchWebService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public IpAddressSearchWebService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public IpAddressSearchWebService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public IpAddressSearchWebService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE);
        //   super(WSDL_LOCATION, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public IpAddressSearchWebService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public IpAddressSearchWebService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName);
    }    

    /**
     *
     * @return
     *     returns IpAddressSearchWebServiceSoap
     */
    @WebEndpoint(name = "IpAddressSearchWebServiceSoap")
    public IpAddressSearchWebServiceSoap getIpAddressSearchWebServiceSoap() {
        return super.getPort(IpAddressSearchWebServiceSoap, IpAddressSearchWebServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IpAddressSearchWebServiceSoap
     */
    @WebEndpoint(name = "IpAddressSearchWebServiceSoap")
    public IpAddressSearchWebServiceSoap getIpAddressSearchWebServiceSoap(WebServiceFeature... features) {
        return super.getPort(IpAddressSearchWebServiceSoap, IpAddressSearchWebServiceSoap.class, features);
    }
    /**
     *
     * @return
     *     returns IpAddressSearchWebServiceSoap
     */
    @WebEndpoint(name = "IpAddressSearchWebServiceSoap12")
    public IpAddressSearchWebServiceSoap getIpAddressSearchWebServiceSoap12() {
        return super.getPort(IpAddressSearchWebServiceSoap12, IpAddressSearchWebServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IpAddressSearchWebServiceSoap
     */
    @WebEndpoint(name = "IpAddressSearchWebServiceSoap12")
    public IpAddressSearchWebServiceSoap getIpAddressSearchWebServiceSoap12(WebServiceFeature... features) {
        return super.getPort(IpAddressSearchWebServiceSoap12, IpAddressSearchWebServiceSoap.class, features);
    }
    /**
     *
     * @return
     *     returns IpAddressSearchWebServiceHttpGet
     */
    @WebEndpoint(name = "IpAddressSearchWebServiceHttpGet")
    public IpAddressSearchWebServiceHttpGet getIpAddressSearchWebServiceHttpGet() {
        return super.getPort(IpAddressSearchWebServiceHttpGet, IpAddressSearchWebServiceHttpGet.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IpAddressSearchWebServiceHttpGet
     */
    @WebEndpoint(name = "IpAddressSearchWebServiceHttpGet")
    public IpAddressSearchWebServiceHttpGet getIpAddressSearchWebServiceHttpGet(WebServiceFeature... features) {
        return super.getPort(IpAddressSearchWebServiceHttpGet, IpAddressSearchWebServiceHttpGet.class, features);
    }
    /**
     *
     * @return
     *     returns IpAddressSearchWebServiceHttpPost
     */
    @WebEndpoint(name = "IpAddressSearchWebServiceHttpPost")
    public IpAddressSearchWebServiceHttpPost getIpAddressSearchWebServiceHttpPost() {
        return super.getPort(IpAddressSearchWebServiceHttpPost, IpAddressSearchWebServiceHttpPost.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IpAddressSearchWebServiceHttpPost
     */
    @WebEndpoint(name = "IpAddressSearchWebServiceHttpPost")
    public IpAddressSearchWebServiceHttpPost getIpAddressSearchWebServiceHttpPost(WebServiceFeature... features) {
        return super.getPort(IpAddressSearchWebServiceHttpPost, IpAddressSearchWebServiceHttpPost.class, features);
    }

}
